[Interface]
Address = {{ vpn_ip }}
PrivateKey = {{ private.content | b64decode | trim }}
{% set post_up = [] %}
{% set post_down = [] %}
{% if gateway_to is defined %}
{% set _ = post_up.append("iptables -A FORWARD -i %i -j ACCEPT") %}
{% set _ = post_up.append("iptables -A FORWARD -o %i -j ACCEPT") %}
{% set _ = post_down.append("iptables -D FORWARD -i %i -j ACCEPT") %}
{% set _ = post_down.append("iptables -D FORWARD -o %i -j ACCEPT") %}
{% endif %}
{% if wireguard_post_up %}
{% set _ = post_down.append(wireguard_post_up) %}
{% endif %}
{% if wireguard_post_down %}
{% set _ = post_down.append(wireguard_post_down) %}
{% endif %}

{% if post_up %}
PostUp = {{ post_up | join('; ')}}
{% endif %}
{% if post_down %}
PostDown = {{ post_down | join('; ')}}
{% endif %}

ListenPort = {{ wireguard_port }}
{% if wireguard_mtu is defined %}
MTU = {{ wireguard_mtu }}
{% endif %}

{% for node in play_hosts %}
{% if inventory_hostname != hostvars[node]['inventory_hostname'] %}
{% include 'peer_conf.j2' %}
{% endif %}
{% endfor %}

{% if client_vpn_ip | length > 0 %}
[Peer]
PublicKey = {{ client_publickey.content | b64decode | trim }}
AllowedIPs = {{ client_vpn_ip }}
{% endif %}

{% if wireguard_additional_peers  %}
{# Adds all of the configured additional peers, unless the the peer is 'client_only' and the additional peers does
not have an endpoint. In that case neither of them has an endpoint so a direct communication between them is impossible #}
{% for node in wireguard_additional_peers if client_only is undefined or not client_only or node.endpoint is defined %}
# {{ node.comment  }}
[Peer]
PublicKey = {{ node.key }}
AllowedIPs = {{ node.ip }}
{% if node.endpoint is defined %}
Endpoint = {{ node.endpoint }}
{% endif %}
{% if node.keepalive is defined %}
PersistentKeepalive = {{ node.keepalive }}
{% endif %}

{% endfor %}
{% endif %}
